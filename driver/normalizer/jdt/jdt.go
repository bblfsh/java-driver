// Package jdt defines constants from Eclipse JDT AST.
package jdt
/*
// GENERATED BY java-driver GoGen
// DO NOT EDIT

import "gopkg.in/bblfsh/sdk.v1/uast/ann"

// Eclipse JDT node types.
// This includes all non-abstract classes extending from ASTNode.
// See http://help.eclipse.org/neon/index.jsp?topic=%2Forg.eclipse.jdt.doc.isv%2Freference%2Fapi%2Findex.html&overview-summary.html
var (
	AnnotationTypeDeclaration       = ann.HasInternalType("AnnotationTypeDeclaration")
	AnnotationTypeMemberDeclaration = ann.HasInternalType("AnnotationTypeMemberDeclaration")
	AnonymousClassDeclaration       = ann.HasInternalType("AnonymousClassDeclaration")
	ArrayAccess                     = ann.HasInternalType("ArrayAccess")
	ArrayCreation                   = ann.HasInternalType("ArrayCreation")
	ArrayInitializer                = ann.HasInternalType("ArrayInitializer")
	ArrayType                       = ann.HasInternalType("ArrayType")
	AssertStatement                 = ann.HasInternalType("AssertStatement")
	Assignment                      = ann.HasInternalType("Assignment")
	Block                           = ann.HasInternalType("Block")
	BlockComment                    = ann.HasInternalType("BlockComment")
	BooleanLiteral                  = ann.HasInternalType("BooleanLiteral")
	BreakStatement                  = ann.HasInternalType("BreakStatement")
	CastExpression                  = ann.HasInternalType("CastExpression")
	CatchClause                     = ann.HasInternalType("CatchClause")
	CharacterLiteral                = ann.HasInternalType("CharacterLiteral")
	ClassInstanceCreation           = ann.HasInternalType("ClassInstanceCreation")
	CompilationUnit                 = ann.HasInternalType("CompilationUnit")
	ConditionalExpression           = ann.HasInternalType("ConditionalExpression")
	ConstructorInvocation           = ann.HasInternalType("ConstructorInvocation")
	ContinueStatement               = ann.HasInternalType("ContinueStatement")
	CreationReference               = ann.HasInternalType("CreationReference")
	Dimension                       = ann.HasInternalType("Dimension")
	DoStatement                     = ann.HasInternalType("DoStatement")
	EmptyStatement                  = ann.HasInternalType("EmptyStatement")
	EnhancedForStatement            = ann.HasInternalType("EnhancedForStatement")
	EnumConstantDeclaration         = ann.HasInternalType("EnumConstantDeclaration")
	EnumDeclaration                 = ann.HasInternalType("EnumDeclaration")
	ExpressionMethodReference       = ann.HasInternalType("ExpressionMethodReference")
	ExpressionStatement             = ann.HasInternalType("ExpressionStatement")
	FieldAccess                     = ann.HasInternalType("FieldAccess")
	FieldDeclaration                = ann.HasInternalType("FieldDeclaration")
	ForStatement                    = ann.HasInternalType("ForStatement")
	IfStatement                     = ann.HasInternalType("IfStatement")
	ImportDeclaration               = ann.HasInternalType("ImportDeclaration")
	InfixExpression                 = ann.HasInternalType("InfixExpression")
	Initializer                     = ann.HasInternalType("Initializer")
	InstanceofExpression            = ann.HasInternalType("InstanceofExpression")
	IntersectionType                = ann.HasInternalType("IntersectionType")
	Javadoc                         = ann.HasInternalType("Javadoc")
	LabeledStatement                = ann.HasInternalType("LabeledStatement")
	LambdaExpression                = ann.HasInternalType("LambdaExpression")
	LineComment                     = ann.HasInternalType("LineComment")
	MarkerAnnotation                = ann.HasInternalType("MarkerAnnotation")
	MemberRef                       = ann.HasInternalType("MemberRef")
	MemberValuePair                 = ann.HasInternalType("MemberValuePair")
	MethodDeclaration               = ann.HasInternalType("MethodDeclaration")
	MethodInvocation                = ann.HasInternalType("MethodInvocation")
	MethodRef                       = ann.HasInternalType("MethodRef")
	MethodRefParameter              = ann.HasInternalType("MethodRefParameter")
	Modifier                        = ann.HasInternalType("Modifier")
	NameQualifiedType               = ann.HasInternalType("NameQualifiedType")
	NormalAnnotation                = ann.HasInternalType("NormalAnnotation")
	NullLiteral                     = ann.HasInternalType("NullLiteral")
	NumberLiteral                   = ann.HasInternalType("NumberLiteral")
	PackageDeclaration              = ann.HasInternalType("PackageDeclaration")
	ParameterizedType               = ann.HasInternalType("ParameterizedType")
	ParenthesizedExpression         = ann.HasInternalType("ParenthesizedExpression")
	PostfixExpression               = ann.HasInternalType("PostfixExpression")
	PrefixExpression                = ann.HasInternalType("PrefixExpression")
	PrimitiveType                   = ann.HasInternalType("PrimitiveType")
	QualifiedName                   = ann.HasInternalType("QualifiedName")
	QualifiedType                   = ann.HasInternalType("QualifiedType")
	ReturnStatement                 = ann.HasInternalType("ReturnStatement")
	SimpleName                      = ann.HasInternalType("SimpleName")
	SimpleType                      = ann.HasInternalType("SimpleType")
	SingleMemberAnnotation          = ann.HasInternalType("SingleMemberAnnotation")
	SingleVariableDeclaration       = ann.HasInternalType("SingleVariableDeclaration")
	StringLiteral                   = ann.HasInternalType("StringLiteral")
	SuperConstructorInvocation      = ann.HasInternalType("SuperConstructorInvocation")
	SuperFieldAccess                = ann.HasInternalType("SuperFieldAccess")
	SuperMethodInvocation           = ann.HasInternalType("SuperMethodInvocation")
	SuperMethodReference            = ann.HasInternalType("SuperMethodReference")
	SwitchCase                      = ann.HasInternalType("SwitchCase")
	SwitchStatement                 = ann.HasInternalType("SwitchStatement")
	SynchronizedStatement           = ann.HasInternalType("SynchronizedStatement")
	TagElement                      = ann.HasInternalType("TagElement")
	TextElement                     = ann.HasInternalType("TextElement")
	ThisExpression                  = ann.HasInternalType("ThisExpression")
	ThrowStatement                  = ann.HasInternalType("ThrowStatement")
	TryStatement                    = ann.HasInternalType("TryStatement")
	TypeDeclaration                 = ann.HasInternalType("TypeDeclaration")
	TypeDeclarationStatement        = ann.HasInternalType("TypeDeclarationStatement")
	TypeLiteral                     = ann.HasInternalType("TypeLiteral")
	TypeMethodReference             = ann.HasInternalType("TypeMethodReference")
	TypeParameter                   = ann.HasInternalType("TypeParameter")
	UnionType                       = ann.HasInternalType("UnionType")
	VariableDeclarationExpression   = ann.HasInternalType("VariableDeclarationExpression")
	VariableDeclarationFragment     = ann.HasInternalType("VariableDeclarationFragment")
	VariableDeclarationStatement    = ann.HasInternalType("VariableDeclarationStatement")
	WhileStatement                  = ann.HasInternalType("WhileStatement")
	WildcardType                    = ann.HasInternalType("WildcardType")
)

// Eclipse JDT structural properties IDs.
var (
	PropertyAnnotations               = ann.HasInternalRole("annotations")
	PropertyAnonymousClassDeclaration = ann.HasInternalRole("anonymousClassDeclaration")
	PropertyArguments                 = ann.HasInternalRole("arguments")
	PropertyArray                     = ann.HasInternalRole("array")
	PropertyBody                      = ann.HasInternalRole("body")
	PropertyBodyDeclarations          = ann.HasInternalRole("bodyDeclarations")
	PropertyBooleanValue              = ann.HasInternalRole("booleanValue")
	PropertyBound                     = ann.HasInternalRole("bound")
	PropertyCatchClauses              = ann.HasInternalRole("catchClauses")
	PropertyConstructor               = ann.HasInternalRole("constructor")
	PropertyDeclaration               = ann.HasInternalRole("declaration")
	PropertyDefault                   = ann.HasInternalRole("default")
	PropertyDimensions                = ann.HasInternalRole("dimensions")
	PropertyElementType               = ann.HasInternalRole("elementType")
	PropertyElseExpression            = ann.HasInternalRole("elseExpression")
	PropertyElseStatement             = ann.HasInternalRole("elseStatement")
	PropertyEnumConstants             = ann.HasInternalRole("enumConstants")
	PropertyEscapedValue              = ann.HasInternalRole("escapedValue")
	PropertyException                 = ann.HasInternalRole("exception")
	PropertyExpression                = ann.HasInternalRole("expression")
	PropertyExpressions               = ann.HasInternalRole("expressions")
	PropertyExtendedOperands          = ann.HasInternalRole("extendedOperands")
	PropertyExtraDimensions2          = ann.HasInternalRole("extraDimensions2")
	PropertyFinally                   = ann.HasInternalRole("finally")
	PropertyFragments                 = ann.HasInternalRole("fragments")
	PropertyIdentifier                = ann.HasInternalRole("identifier")
	PropertyImports                   = ann.HasInternalRole("imports")
	PropertyIndex                     = ann.HasInternalRole("index")
	PropertyInitializer               = ann.HasInternalRole("initializer")
	PropertyInitializers              = ann.HasInternalRole("initializers")
	PropertyInterface                 = ann.HasInternalRole("interface")
	PropertyJavadoc                   = ann.HasInternalRole("javadoc")
	PropertyKeyword                   = ann.HasInternalRole("keyword")
	PropertyLabel                     = ann.HasInternalRole("label")
	PropertyLeftHandSide              = ann.HasInternalRole("leftHandSide")
	PropertyLeftOperand               = ann.HasInternalRole("leftOperand")
	PropertyMessage                   = ann.HasInternalRole("message")
	PropertyModifiers                 = ann.HasInternalRole("modifiers")
	PropertyName                      = ann.HasInternalRole("name")
	PropertyOnDemand                  = ann.HasInternalRole("onDemand")
	PropertyOperand                   = ann.HasInternalRole("operand")
	PropertyOperator                  = ann.HasInternalRole("operator")
	PropertyPackage                   = ann.HasInternalRole("package")
	PropertyParameter                 = ann.HasInternalRole("parameter")
	PropertyParameters                = ann.HasInternalRole("parameters")
	PropertyParentheses               = ann.HasInternalRole("parentheses")
	PropertyPrimitiveTypeCode         = ann.HasInternalRole("primitiveTypeCode")
	PropertyQualifier                 = ann.HasInternalRole("qualifier")
	PropertyReceiverQualifier         = ann.HasInternalRole("receiverQualifier")
	PropertyReceiverType              = ann.HasInternalRole("receiverType")
	PropertyResources                 = ann.HasInternalRole("resources")
	PropertyReturnType2               = ann.HasInternalRole("returnType2")
	PropertyRightHandSide             = ann.HasInternalRole("rightHandSide")
	PropertyRightOperand              = ann.HasInternalRole("rightOperand")
	PropertyStatements                = ann.HasInternalRole("statements")
	PropertyStatic                    = ann.HasInternalRole("static")
	PropertySuperInterfaceTypes       = ann.HasInternalRole("superInterfaceTypes")
	PropertySuperclassType            = ann.HasInternalRole("superclassType")
	PropertyTagName                   = ann.HasInternalRole("tagName")
	PropertyTags                      = ann.HasInternalRole("tags")
	PropertyText                      = ann.HasInternalRole("text")
	PropertyThenExpression            = ann.HasInternalRole("thenExpression")
	PropertyThenStatement             = ann.HasInternalRole("thenStatement")
	PropertyThrownExceptionTypes      = ann.HasInternalRole("thrownExceptionTypes")
	PropertyToken                     = ann.HasInternalRole("token")
	PropertyType                      = ann.HasInternalRole("type")
	PropertyTypeArguments             = ann.HasInternalRole("typeArguments")
	PropertyTypeBounds                = ann.HasInternalRole("typeBounds")
	PropertyTypeName                  = ann.HasInternalRole("typeName")
	PropertyTypeParameters            = ann.HasInternalRole("typeParameters")
	PropertyTypes                     = ann.HasInternalRole("types")
	PropertyUpdaters                  = ann.HasInternalRole("updaters")
	PropertyUpperBound                = ann.HasInternalRole("upperBound")
	PropertyValue                     = ann.HasInternalRole("value")
	PropertyValues                    = ann.HasInternalRole("values")
	PropertyVarargs                   = ann.HasInternalRole("varargs")
	PropertyVarargsAnnotations        = ann.HasInternalRole("varargsAnnotations")
)

// Java Keywords
var (
	KeywordAbstract     = ann.HasToken("abstract")
	KeywordAssert       = ann.HasToken("assert")
	KeywordBreak        = ann.HasToken("break")
	KeywordCase         = ann.HasToken("case")
	KeywordCatch        = ann.HasToken("catch")
	KeywordClass        = ann.HasToken("class")
	KeywordContinue     = ann.HasToken("continue")
	KeywordDefault      = ann.HasToken("default")
	KeywordDo           = ann.HasToken("do")
	KeywordElse         = ann.HasToken("else")
	KeywordEnum         = ann.HasToken("enum")
	KeywordExtends      = ann.HasToken("extends")
	KeywordFinal        = ann.HasToken("final")
	KeywordFinally      = ann.HasToken("finally")
	KeywordFor          = ann.HasToken("for")
	KeywordIf           = ann.HasToken("if")
	KeywordImplements   = ann.HasToken("implements")
	KeywordImport       = ann.HasToken("import")
	KeywordInstanceof   = ann.HasToken("instanceof")
	KeywordInterface    = ann.HasToken("interface")
	KeywordNative       = ann.HasToken("native")
	KeywordNew          = ann.HasToken("new")
	KeywordPackage      = ann.HasToken("package")
	KeywordPrivate      = ann.HasToken("private")
	KeywordProtected    = ann.HasToken("protected")
	KeywordPublic       = ann.HasToken("public")
	KeywordReturn       = ann.HasToken("return")
	KeywordStatic       = ann.HasToken("static")
	KeywordStrictfp     = ann.HasToken("strictfp")
	KeywordSuper        = ann.HasToken("super")
	KeywordSwitch       = ann.HasToken("switch")
	KeywordSynchronized = ann.HasToken("synchronized")
	KeywordThis         = ann.HasToken("this")
	KeywordThrow        = ann.HasToken("throw")
	KeywordThrows       = ann.HasToken("throws")
	KeywordTransient    = ann.HasToken("transient")
	KeywordTry          = ann.HasToken("try")
	KeywordVolatile     = ann.HasToken("volatile")
	KeywordWhile        = ann.HasToken("while")
	KeywordTrue         = ann.HasToken("true")
	KeywordFalse        = ann.HasToken("false")
	KeywordNull         = ann.HasToken("null")
)
*/